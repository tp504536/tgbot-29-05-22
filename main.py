import logging
import re
import time

from keyboards import *
import aiocron
from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.exceptions import ChatNotFound
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup

from database import Sql

storage = MemoryStorage()
bot = Bot(token="TOKEN BOT")
dp = Dispatcher(bot, storage=storage)
logging.basicConfig(level=logging.INFO)
db = Sql('database.db')


class FSMail_user(StatesGroup):
    sms = State()


class FSMail_send_user(StatesGroup):
    sms_user = State()


@dp.message_handler(commands="start")
async def cmd_test1(message: types.Message):
    admin = 'id admin'
    if message.from_user.id == admin:
        await message.answer('–ü—Ä–∏–≤–µ—Ç', reply_markup=admin_key)
    else:
        await message.answer('–†–∞–¥–∞, —á—Ç–æ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ '
                             '–º–æ–∏ '
                             '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –í '
                             '—ç—Ç–æ—Ç–æ–≥–æ –±–æ—Ç–∞'
                             ' –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏–º '
                             '–≤ —Å–∞–º–æ–µ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è', reply_markup=key)
        if not db.subscriber_exists(message.from_user.id):
            db.add_subscriber(message.from_user.id)


@dp.message_handler(content_types='text')
async def button(message: types.Message):
    if message.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        if not db.message_exists(message.from_user.id):
            await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', reply_markup=types.ReplyKeyboardRemove())
            await bot.delete_message(message.from_user.id, message.message_id)
            await FSMail_user.sms.set()
        else:
            await message.answer('–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞!')
    elif message.text == '–í—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è':
        global id_sub
        try:
            for k in db.push_msg():
                id_sub = k[0]
        except ChatNotFound:
            pass
        if db.check():
            try:
                time.sleep(0.1)
                await bot.send_message(message.from_user.id, k[1], reply_markup=ok)
            except (UnboundLocalError, ChatNotFound):
                pass
        else:
            await message.answer('–°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç')
    elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        len_user = db.lenuser()
        a = do_work(len_user)
        okk = db.true()
        b = (re.sub(r"[',()/\]\[]", '', str(okk)))
        no = db.false()
        n = (re.sub(r"[',()/\]\[]", '', str(no)))
        await message.answer('–í –±–æ—Ç–∞ –∑–∞—Ö–æ–¥–∏–ª–æ:\n' + str(len_user) + ' ' + str(a) + '\n–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ:\n' + 'üëç' + ' ' + b
                             + '\nüëé' + ' ' + n)
    else:
        await message.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')


def do_work(count):
    if 1 < count % 10 < 5 and count // 10 != 1:
        a = "—á–µ–ª–æ–≤–µ–∫–∞"
        return a
    else:
        a = "—á–µ–ª–æ–≤–µ–∫"
        return a


@aiocron.crontab('*/1 * * * *')
async def msg_two():
    try:
        for i in db.date_2():
            msg_2 = (re.sub(r"[',()]", '', str(i)))
            time.sleep(0.1)
            await bot.send_photo(msg_2, types.InputFile("image/1.png"))
    except ChatNotFound:
        pass

    try:
        for n in db.date_2_1():
            msg_2_1 = (re.sub(r"[',()]", '', str(n)))
            time.sleep(0.1)
            await bot.send_message(msg_2_1, '–î–µ–ª—é—Å—å —Å —Ç–æ–±–æ–π –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º –≤–∏–¥–µ–æ –¥–ª—è –∫—É—Ä—Å–∞'
                                            ' ¬´–î—ã—Ö–∞–Ω–∏–µ –ñ–∏–∑–Ω–∏¬ª. –¢–∞–∫ –¢—ã —Å–º–æ–∂–µ—à—å '
                                            '–ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π –±–ª–∏–∂–µ.')
    except ChatNotFound:
        pass

    try:
        for g in db.date_3():
            msg_3 = (re.sub(r"[',()]", '', str(g)))
            time.sleep(0.1)
            await bot.send_video(msg_3, 'BAACAgIAAxkBAAMEYpOYb_lPeDMlKcTSDdrM0uZDZjgAAmEYAAJF_plIG0FxQsYKMkckBA',
                                 caption='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –∏ –∂–µ–ª–∞—é —É–ª—ã–±–∫–∏ —Ç–≤–æ–µ–º—É —Å–µ—Ä–¥—Ü—É –∏ —è—Å–Ω–æ—Å—Ç–∏ —Ç–≤–æ–µ–º—É –¥—ã—Ö–∞–Ω–∏—é!')
            time.sleep(0.1)
            await bot.send_message(msg_3, ' –ü–æ–º–æ–≥–∏ –º–Ω–µ —É–∑–Ω–∞—Ç—å, –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –≤–∏–¥–µ–æ!', reply_markup=in_key)
    except ChatNotFound:
        pass

    try:
        for q in db.date_4():
            msg_4 = (re.sub(r"[',()]", '', str(q)))
            time.sleep(0.1)
            await bot.send_message(msg_4, '–°–µ—Ä–¥–µ—á–Ω—ã–π –ø—Ä–∏–≤–µ—Ç!')
    except ChatNotFound:
        pass

    try:
        for w in db.date_4_1():
            msg_4_1 = (re.sub(r"[',()]", '', str(w)))
            time.sleep(0.1)
            await bot.send_photo(msg_4_1, types.InputFile("image/4.png"),
                                 caption='–ö—É—Ä—Å ¬´–î—ã—Ö–∞–Ω–∏–µ –ñ–∏–∑–Ω–∏¬ª —è –Ω–∞–ø–∏—Å–∞–ª–∞ –Ω–∞ –ë–∞–ª–∏,'
                                         ' –≤–¥–æ—Ö–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –∏–¥–µ–µ–π —Å–æ–∑–¥–∞—Ç—å'
                                         ' —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ª—é–¥–µ–π, '
                                         '–ø–æ–∑–Ω–∞—é—â–∏—Ö —Å–µ–±—è –∏ –∂–µ–ª–∞—é—â–∏—Ö —É–ª—É—á—à–∏—Ç—å'
                                         ' –∫–∞—á–µ—Å—Ç–≤–æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è.'
                                         ' –ò —É –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å! üòâ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞'
                                         ' —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –Ω–∞ —Å–µ–º—å –¥–Ω–µ–π —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö'
                                         ' –∑–∞–Ω—è—Ç–∏–π. –ü—Ä–∞–∫—Ç–∏–∫–∏ –∑–∞–ø–∏—Å–∞–Ω—ã —Å —É—á—ë—Ç–æ–º'
                                         ' –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ–º–ø–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏ –∏'
                                         ' –ø–æ—ç—Ç–æ–º—É –∑–∞–Ω–∏–º–∞—é—Ç –≤—Å–µ–≥–æ 20 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥'
                                         ' —Å–Ω–æ–º –∏–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è. –í—Å—ë, —á—Ç–æ'
                                         ' –Ω—É–∂–Ω–æ, —ç—Ç–æ –Ω–∞—É—à–Ω–∏–∫–∏ –∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è '
                                         '–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å. –ú–∏–Ω–∏–º—É–º —É—Å–∏–ª–∏–π –∏ –º–∞–∫—Å–∏–º—É–º'
                                         ' —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è. –°–ª—É—à–∞—Ç—å –∏ –¥–µ–ª–∞—Ç—å. –¢–æ—á–Ω–æ'
                                         ' –ª–µ–≥–∫–æ. –î—É–º–∞—é, —á—Ç–æ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è '
                                         '–Ω–∞—á–∞—Ç—å. –ñ–µ–ª–∞—é —Ç–µ–±–µ –∫–∞–π—Ñ–∞–Ω—É—Ç—å –ø–æ –ø–æ–ª–Ω–æ–π!<a href="https://mahimalife.ru/"> –ù–∞—á–Ω–µ–º?</a>',
                                 parse_mode=types.ParseMode.HTML)
    except ChatNotFound:
        pass

    try:
        for e in db.date_5():
            msg_5 = (re.sub(r"[',()]", '', str(e)))
            time.sleep(0.1)
            await bot.send_photo(msg_5, types.InputFile("image/5.png"), caption='–ü—Ä–æ–¥–æ–ª–∂—É —Å–æ —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π üôÇ')
    except ChatNotFound:
        pass

    try:
        for r in db.date_5_1():
            msg_5_1 = (re.sub(r"[',()]", '', str(r)))
            time.sleep(0.1)
            await bot.send_message(
                msg_5_1, '–Ø –≤–µ—Ä–Ω—É–ª–∞—Å—å –≤ –ú–æ—Å–∫–≤—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –∫—É—Ä—Å ¬´–î—ã—Ö–∞–Ω–∏–µ –ñ–∏–∑–Ω–∏¬ª' \
                         ' –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ç—É–¥–∏–∏ –∑–≤—É–∫–æ–∑–∞–ø–∏—Å–∏. –í –ø—Ä–æ—Ü–µ—Å—Å–µ —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞' \
                         ' —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–∞–º–µ—Ä—Ç–æ–Ω —á–∞—Å—Ç–æ—Ç—ã –û–ú, –∑–≤—É–∫–∏ —á–∞—à–∏, –º–µ—Ç—Ä–æ–Ω–æ–º,' \
                         ' –¥—ã—Ö–∞–Ω–∏–µ –æ–∫–µ–∞–Ω–∞, –º–æ—ë –¥—ã—Ö–∞–Ω–∏–µ –¥–ª—è —Ç–≤–æ–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ –≤–µ–¥–µ–Ω–∏–∏, –º–æ–π –≥–æ–ª–æ—Å' \
                         ' –∏ —á–∞—Ä—É—é—â–∏–π –∑–≤—É–∫ –≥–∏—Ç–∞—Ä—ã –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–≤–æ–µ–≥–æ —Å–µ—Ä–¥—Ü–∞. –°–µ–º—å —Ç—Ä–µ–∫–æ–≤, ' \
                         '—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–º—É –ø–µ—Ä–µ–π—Ç–∏ ' \
                         '–Ω–∞ –≥–ª—É–±–æ–∫–∏–µ —Å–ª–æ–∏ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏—è –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ —Ç–æ–Ω–∫–æ–º' \
                         ' —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–º —É—Ä–æ–≤–Ω–µ. –î–µ–π—Å—Ç–≤–∏–µ —ç—Ç–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏' \
                         ' –≤—ã–∑—ã–≤–∞–µ—Ç —É –º–µ–Ω—è –∏—Å—Ç–∏–Ω–Ω—ã–π –≤–æ—Å—Ç–æ—Ä–≥!!! –ñ–µ–ª–∞—é —Ç–µ–±–µ –æ—Å–≤–æ–∏—Ç—å –∫—É—Ä—Å –∏ –ø–æ–ª—É—á–∏—Ç—å' \
                         ' –≤—Å–µ –¥–∞—Ä—ã –∂–∏–∑–Ω–∏.<a href="https://mahimalife.ru/"> –í–ø–µ—Ä–µ–¥!</a> ',
                parse_mode=types.ParseMode.HTML)
    except ChatNotFound:
        pass

    try:
        for y in db.date_6():
            msg_6 = (re.sub(r"[',()]", '', str(y)))
            time.sleep(0.1)
            await bot.send_photo(msg_6, types.InputFile("image/6.png"),
                                 caption='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤—Å–µ–π —Å–æ–±–æ–π! –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—à—å, —á—Ç–æ –º–æ–∂–Ω–æ –¥—ã—à–∞—Ç—å –¥–æ–±—Ä–æ—Ç–æ–π? –ü–æ–ø—Ä–æ–±—É–π! '
                                         '–°–¥–µ–ª–∞–π –≤–¥–æ—Ö, –ø—Ä–∏–Ω–∏–º–∞—è –¥–æ–±—Ä–æ—Ç—É —ç—Ç–æ–≥–æ –º–∏—Ä–∞! –°–¥–µ–ª–∞–π –≤—ã–¥–æ—Ö, –ø—Ä–æ–ø—É—Å–∫–∞—è —Å–∫–≤–æ–∑—å —Å–µ–±—è'
                                         ' –¥–æ–±—Ä–æ—Ç—É –º–∏—Ä–∞! –ù–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–ª–∏–≤ —Å–∏–ª –æ–±–µ—Å–ø–µ—á–µ–Ω—ã! –ê –º–æ–π –∫—É—Ä—Å —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç'
                                         ' –∑–∞–∫—Ä–µ–ø–∏—Ç—å –¥–æ–±—Ä–æ—Ç—É –º–∏—Ä–∞ –≤–Ω—É—Ç—Ä–∏ –∏ —Å–Ω–∞—Ä—É–∂–∏.'
                                         ' <a href="https://mahimalife.ru/"> –î—ã—à–∏!!!</a> '
                                 , parse_mode=types.ParseMode.HTML)
    except ChatNotFound:
        pass
    try:
        for h in db.date_7():
            msg_7 = (re.sub(r"[',()]", '', str(h)))
            time.sleep(0.1)
            await bot.send_photo(msg_7, types.InputFile("image/7.jpg"), caption='–ü—Ä–∏–≤–µ—Ç üòä')
    except ChatNotFound:
        pass
    try:
        for o in db.date_7_2():
            msg_7_2 = (re.sub(r"[',()]", '', str(o)))
            time.sleep(0.1)
            await bot.send_message(
                msg_7_2, '–ö–æ–≥–¥–∞ –º–Ω–µ –ø–ª–æ—Ö–æ, —è –Ω–∞—á–∏–Ω–∞—é –≥–ª—É–±–∂–µ –¥—ã—à–∞—Ç—å! –ö–æ–≥–¥–∞ –º–Ω–µ —Ö–æ—Ä–æ—à–æ, —è –Ω–∞—á–∏–Ω–∞—é –≥–ª—É–±–∂–µ –¥—ã—à–∞—Ç—å!!!'
                         ' –î—ã—Ö–∞–Ω–∏–µ ‚Äî –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –º—ã –º–æ–∂–µ–º –ª—É—á—à–µ –ø–æ–∑–Ω–∞—Ç—å –∂–∏–∑–Ω—å –∏ –±—ã—Å—Ç—Ä–æ –∏ –ª–µ–≥–∫–æ'
                         ' —Ä–µ—à–∏—Ç—å —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏ '
                         '–≤ –∂–∏–∑–Ω–∏.<a href="https://mahimalife.ru/"> –î—ã—à–∏–º</a> –≤–º–µ—Å—Ç–µ! ', parse_mode=types.ParseMode.HTML)
    except ChatNotFound:
        pass


@dp.message_handler(content_types='text', state=FSMail_user.sms)
async def msg(message: types.Message, state: FSMContext):
    global data
    async with state.proxy() as data:
        data['text'] = message.text
        await state.finish()
        await message.answer('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ' + data['text'] + '\n–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å!',
                             reply_markup=send_msg)


@dp.message_handler(content_types='text', state=FSMail_send_user.sms_user)
async def msg_end(message: types.Message, state: FSMContext):
    global data_1
    async with state.proxy() as data_1:
        data_1['text'] = message.text
        await state.finish()
        await message.answer('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ' + data_1['text'] + '\n–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å!',
                             reply_markup=send_ok)


@dp.callback_query_handler(text='yes')
async def yes(call: types.CallbackQuery):
    await call.bot.send_photo(call.from_user.id, types.InputFile("image/3.png"))
    await call.bot.delete_message(call.from_user.id, call.message.message_id)
    tru = db.true()[0]
    a = int((re.sub(r"[',()/\]\[]", '', str(tru))))
    a += 1
    db.true_up(str(a))


@dp.callback_query_handler(text='no')
async def no(call: types.CallbackQuery):
    await call.bot.send_photo(call.from_user.id, types.InputFile("image/3.png"))
    await call.bot.delete_message(call.from_user.id, call.message.message_id)
    tru = db.false()[0]
    a = int((re.sub(r"[',()/\]\[]", '', str(tru))))
    a += 1
    db.fals_up(str(a))


@dp.callback_query_handler(text='back')
async def back_menu(call: types.CallbackQuery):
    await call.message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',reply_markup=key)
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


@dp.callback_query_handler(text='send')
async def send_menu(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    db.add_message(call.from_user.id, data['text'])
    await bot.send_message('id –∞–¥–º–∏–Ω–∞', '–£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
    await call.message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–∫–æ—Ä–æ –º—ã –í–∞–º –æ—Ç–≤–µ—Ç–∏–º', reply_markup=key)


@dp.callback_query_handler(text='mail_ok')
async def send_user(call: types.CallbackQuery):
    await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞')
    await FSMail_send_user.sms_user.set()
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


@dp.callback_query_handler(text='mail_no')
async def send_user(call: types.CallbackQuery):
    await call.message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ')
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    db.del_sub(id_sub)


@dp.callback_query_handler(text='mail_ok_sub')
async def back_menu(call: types.CallbackQuery):
    await call.message.answer('–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ')
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    await bot.send_message(id_sub, '–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n' + data_1['text'])
    db.del_sub(id_sub)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)
